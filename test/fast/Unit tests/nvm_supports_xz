#!/bin/sh

which tar
command -v tar
command -V tar
type tar
tar --version
type -aP tar

OLDPATH=$PATH
TEST_PATH=../../xz-test

cleanup() {
  rm -rf $TEST_PATH/
  export PATH=$OLDPATH
}
die () { echo "$@" ; cleanup ; exit 1; }

\. ../../../nvm.sh

$(nvm_supports_xz "v2.3.2") || \
  die "expected 'nvm_supports_xz v2.3.2' to exit with 0"

$(nvm_supports_xz "v0.12.7") && \
  die "expected 'nvm_supports_xz v0.12.7' to exit with 1"

# set up for a failure by having a minimal toolset available
# but no xz executable on the PATH
mkdir -p $TEST_PATH
ln -s /usr/bin/which $TEST_PATH/which
ln -s /usr/bin/command $TEST_PATH/command
ln -s /usr/bin/awk $TEST_PATH/awk
ln -s $(which rm) $TEST_PATH/rm
ln -s /usr/bin/tar $TEST_PATH/tar

# liblzma provides xz support on macOS, so hide it for now
#if [ -n "$(uname -s | grep -io darwin)" ]; then
#  mv /usr/lib/liblzma.5.dylib /usr/lib/liblzma.5.dylib.backup
#fi

export PATH=$TEST_PATH

EXIT_STATUS="$(nvm_supports_xz 'v2.3.2')"

export PATH=$OLDPATH

# restore liblzma to its original location/filename
#if [ -n "$(uname -s | grep -io darwin)" ]; then
#  mv /usr/lib/liblzma.5.dylib.backup /usr/lib/liblzma.5.dylib
#fi

if [ "$EXIT_STATUS" = "0" ]; then
  die "expected 'nvm_supports_xz v2.3.2' with a missing xz binary to exit with 1"
fi

cleanup
